{"version":3,"file":"static/js/4258.b8ff3964.chunk.js","mappings":"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","sources":["js/windowMessageManager.js"],"sourcesContent":["\n    function isOriginSameAsLocation(url) {\n        var pageLocation = window.location;\n        var URL_HOST_PATTERN = /(\\w+:)?(?:\\/\\/)([\\w.-]+)?(?::(\\d+))?\\/?/;\n        var urlMatch = URL_HOST_PATTERN.exec(url) || [];\n        var urlparts = {\n            protocol: urlMatch[1] || \"\",\n            host: urlMatch[2] || \"\",\n            port: urlMatch[3] || \"\",\n        };\n\n        function defaultPort(protocol) {\n            return {\n                \"http:\": 80,\n                \"https:\": 443,\n            } [protocol];\n        }\n\n        function portOf(location) {\n            return (\n                location.port || defaultPort(location.protocol || pageLocation.protocol)\n            );\n        }\n\n        return !!(\n            urlparts.protocol &&\n            urlparts.protocol == pageLocation.protocol &&\n            urlparts.host &&\n            urlparts.host == pageLocation.host &&\n            urlparts.host &&\n            portOf(urlparts) == portOf(pageLocation)\n        );\n    }\n    var MM = function (popupWindow, options) {\n        var self = this;\n        self.url = \"\";\n        if (typeof popupWindow === \"string\") {\n            self.url = popupWindow;\n            self.popupWindow = null;\n        } else {\n            self.popupWindow = popupWindow;\n        }\n        self.options = Object.assign({}, {\n                name: '',\n                widthRatio: 0.3,\n                heightRatio: 0.7,\n                autoFocus: true,\n                // top-left top-center top-right right-center right-bottom bottom-center bottom-left left-center\n                placement: 'top-right',\n                crossOriginAlert: true,\n                newTag: false\n            },\n            options\n        );\n        // 绑定的事件\n        self.events = {};\n        // 未准备好时事件存储\n        self.readyEvents = [];\n        // 事件计数id\n        self.id = 0;\n        // 判断接收消息的页面准备好没\n        self.popupWindowReady = false;\n        // 接收到对方的页面消息说明准备好了\n\n        var prefix = \"14B0CF90_77EE_4503_B996_EC75241E281B_\";\n        self.on(function (data) {\n            // 如果收到心跳检测，马上回一条信息，说明还没关闭\n            if (data === prefix + \"CLOSE_HEARTCHECK\") {\n                self.post(\"\");\n            }\n            // 收到信息，说明弹窗已经准备到接收信息了\n            self.popupWindowReady = true;\n            if (self.readyEvents.length === 0) {\n                return;\n            }\n            // 把之前缓存的事件执行完\n            for (let index = 0; index < self.readyEvents.length; index++) {\n                const fn = self.readyEvents[index];\n                try {\n                    fn.call(self);\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            self.readyEvents = [];\n        });\n        // 页面关闭时通知子页面，但不定关闭，子页面收到该信息后，还得自己检测，有三种情况，关闭、不关闭、刷新（新页面）\n        window.addEventListener(\"beforeunload\", function (e) {\n            self.post(prefix + \"CLOSE\");\n        });\n    };\n\n    MM.prototype.open = function () {\n        var self = this;\n        var options = self.options;\n        if ((!this.popupWindow || this.popupWindow.closed) && this.url) {\n            var screenWidth = window.screen.width;\n            var screenHeight = window.screen.height;\n            var width = options.widthRatio * screenWidth; //弹出窗口的宽度;\n            var height = options.heightRatio * screenHeight; //弹出窗口的高度;\n            //window.screen.height获得屏幕的高，window.screen.width获得屏幕的宽\n            var top = (screenHeight - height) / 2; //获得窗口的垂直位置;\n            var left = (screenWidth - width) / 2; //获得窗口的水平位置;\n            var setPositons = {\n                \"top-left\": function () {\n                    top = 0;\n                    left = 0;\n                },\n                \"top-center\": function () {\n                    top = 0;\n                    // left = 0;\n                },\n                \"top-right\": function () {\n                    top = 0;\n                    left = screenWidth - width;\n                },\n                \"right-center\": function () {\n                    // top = 0;\n                    left = screenWidth - width;\n                },\n                \"right-bottom\": function () {\n                    top = screenHeight - height;\n                    left = screenWidth - width;\n                },\n                \"bottom-center\": function () {\n                    top = screenHeight - height;\n                    // left = 0;\n                },\n                \"bottom-left\": function () {\n                    top = screenHeight - height;\n                    left = 0;\n                },\n                \"left-center\": function () {\n                    // top = 0;\n                    left = 0;\n                },\n            };\n\n            if (setPositons[options.placement]) {\n                setPositons[options.placement]();\n            }\n            // 需要打开的话，说明还没ready\n            self.popupWindowReady = false;\n\n            var open = function () {\n                self.popupWindow = window.open(\n                    '',\n                    options.name,\n                    options.newTag?'':\n                    'height=' +\n                    height +\n                    ',innerHeight=' +\n                    height +\n                    ',width=' +\n                    width +\n                    ',innerWidth=' +\n                    width +\n                    ',top=' +\n                    top +\n                    ',left=' +\n                    left\n                );\n                // toolbar=no,menubar=no,scrollbars=auto,location=no,status=no,dependent=yes\n                self.popupWindow.location.href = self.url;\n            };\n\n            if (options.crossOriginAlert && !isOriginSameAsLocation(self.url)) {\n                if (window.confirm(\"注意：你将打开一个第三方页面，它可能会修改当前页面！\")) {\n                    open();\n                } else {\n                    self.close();\n                }\n            } else {\n                open();\n            }\n\n            // var openner = this.popupWindow.opener;\n            // var newOpener = {\n            //   postMessage: openner.postMessage,\n            //   closed: openner.closed\n            // };\n        }\n    };\n\n    // 监听接收消息\n    MM.prototype.on = function (fn) {\n        var self = this;\n        var eventId = self.id++;\n        var events = self.events;\n        events[eventId] = function (e) {\n            if (typeof fn === \"function\" && e.source === self.popupWindow) {\n                fn(e.data);\n            }\n        };\n        window.addEventListener(\"message\", events[eventId], false);\n    };\n    // 发送消息\n    MM.prototype.post = function (data) {\n        var self = this;\n        self.open();\n        var popupWindow = self.popupWindow;\n        if(self.options.autoFocus){\n            popupWindow.focus();\n        }\n        \n        if (popupWindow && popupWindow.postMessage) {\n            self.ready(function () {\n                popupWindow.postMessage(data, \"*\");\n            });\n        }\n    };\n    // 解绑接收消息\n    MM.prototype.off = function (eventId) {\n        var self = this;\n        var events = self.events;\n        if (eventId) {\n            self._offItem(eventId);\n        } else {\n            for (const key in events) {\n                if (Object.hasOwnProperty.call(events, key)) {\n                    self._offItem(key);\n                }\n            }\n        }\n    };\n    MM.prototype._offItem = function (eventId) {\n        var events = this.events;\n        window.removeEventListener(\"message\", events[eventId], false);\n        if (events[eventId]) {\n            delete events[eventId];\n        }\n    };\n    // 准备后处理\n    MM.prototype.ready = function (fn) {\n        fn = typeof fn === \"function\" ? fn : function () {};\n        // popupWindowReady为true后，可能窗口被关闭了\n\n        if (this.popupWindowReady) {\n            fn();\n        } else {\n            this.readyEvents.push(fn);\n        }\n    };\n    // 销毁\n    MM.prototype.destroy = function (fn) {\n        var self = this;\n        self.off();\n        self = null;\n    };\n    // 关闭窗口\n    MM.prototype.close = function (fn) {\n        this.popupWindow.close();\n        this.popupWindow = null;\n    };\n\nexport default MM;\n"],"names":["MM","popupWindow","options","self","this","url","Object","assign","name","widthRatio","heightRatio","autoFocus","placement","crossOriginAlert","newTag","events","readyEvents","id","popupWindowReady","prefix","on","data","post","length","index","fn","call","error","console","log","window","addEventListener","e","prototype","open","closed","screenWidth","screen","width","screenHeight","height","top","left","setPositons","location","href","pageLocation","urlMatch","exec","urlparts","protocol","host","port","portOf","isOriginSameAsLocation","confirm","close","eventId","source","focus","postMessage","ready","off","_offItem","key","hasOwnProperty","removeEventListener","push","destroy"],"sourceRoot":""}